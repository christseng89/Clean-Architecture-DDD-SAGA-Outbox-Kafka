26. Running Apache Kafka using Docker
cd food-ordering-system\infrastructure\docker-compose
docker compose -f common.yml -f zookeeper.yml up -d --remove-orphans

https://zookeeper.apache.org/doc/r3.4.8/zookeeperAdmin.html#sc_zkCommands
https://nmap.org/dist/nmap-7.92-setup.exe

echo ruok | ncat localhost 2181

docker compose -f common.yml -f kafka_cluster.yml up -d
docker compose -f common.yml -f init_kafka.yml up // RUN Once only...

## Kafka manager
http://localhost:9000/

// Add Cluster => Cluster Name (food-ordering-system-cluster) / Cluster Zookeeper Hosts (zookeeper:2181) => Save

27. Implementing Kafka config data generic module
// KafkaConfigData         Related to the service-container->resources->application.yml file ("kafka-config")
// KafkaConsumerConfigData Related to the service-container->resources->application.yml file ("kafka-producer-config")
// KafkaProducerConfigData Related to the service-container->resources->application.yml file ("kafka-consumer-config")

28. Implementing Kafka model generic module
https://avro.apache.org/docs/1.11.1/specification/#logical-types

### kafka-model> 
mvn clean install

### Stop Kafka
docker compose -f common.yml -f kafka_cluster.yml stop
docker compose -f common.yml -f zookeeper.yml stop

### Re-start Kafka //Restarts all stopped and running services.
docker compose -f common.yml -f zookeeper.yml up -d --remove-orphans
docker compose -f common.yml -f kafka_cluster.yml up -d 

### Docker compose stop vs down // https://nickjanetakis.com/blog/docker-tip-45-docker-compose-stop-vs-down#:~:text=The%20docker%2Dcompose%20stop%20command,any%20networks%20that%20were%20created.
- The docker-compose stop command will stop your containers, but it wonâ€™t remove them.
- The docker-compose down command will stop your containers, but it also removes the stopped containers 
  as well as any networks that were created. 

  docker-compose down -v //to remove all volumes too

### Docker compose up -d vs start
- docker-compose up -d, use up -d to start or restart all the services defined in a docker-compose.yml
- docker-compose start command is useful only to restart containers that were previously created, 
  but were stopped. It never creates new containers.

### Reinstall 
1. Stop Kafka (mentioned above)
   docker compose -f common.yml -f kafka_cluster.yml stop
   docker compose -f common.yml -f zookeeper.yml stop

2. Cleanup files in folders
   infrastructure\docker-compose\volumes\kafka\broker-1\*.*
   infrastructure\docker-compose\volumes\kafka\broker-2\*.*
   infrastructure\docker-compose\volumes\kafka\broker-3\*.*

   infrastructure\docker-compose\volumes\zookeeper\data\*.*
   infrastructure\docker-compose\volumes\zookeeper\transactions\*.*

3. Start Kafka
   docker compose -f common.yml -f zookeeper.yml up -d --remove-orphans
   docker compose -f common.yml -f kafka_cluster.yml up -d

4. Initial Kafka Topics (once only)   
   docker compose -f common.yml -f init_kafka.yml up 

5. Setup Kafka Cluster
   http://localhost:9000/

   * Add Cluster => Cluster Name (food-ordering-system-cluster) / Cluster Zookeeper Hosts (zookeeper:2181) => Save
