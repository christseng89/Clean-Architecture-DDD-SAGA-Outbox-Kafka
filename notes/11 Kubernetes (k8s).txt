96. Introduction to Kubernetes and running a local Kubernetes using Docker Desktop
kubectl get node
  NAME             STATUS    ROLES           AGE       VERSION
  docker-desktop   Ready     control-plane   11m       v1.25.0

kubectl get ns
  NAME              STATUS    AGE
  default           Active    21m
  kube-node-lease   Active    21m
  kube-public       Active    21m
  kube-system       Active    21m

kubectl get po -n kube-system
  NAME                                     READY     STATUS    RESTARTS       AGE
  coredns-95db45d46-46j2v                  1/1       Running   0              22m
  coredns-95db45d46-g9ph9                  1/1       Running   0              22m (v)
  etcd-docker-desktop                      1/1       Running   0              22m (v)
  kube-apiserver-docker-desktop            1/1       Running   0              22m (v)
  kube-controller-manager-docker-desktop   1/1       Running   0              22m
  kube-proxy-2k8pw                         1/1       Running   0              22m
  kube-scheduler-docker-desktop            1/1       Running   0              22m (v)
  storage-provisioner                      1/1       Running   0              21m
  vpnkit-controller                        1/1       Running   1 (4m1s ago)   21m (Docker Desktop)

https://www.docker.com/blog/how-kubernetes-works-under-the-hood-with-docker-desktop/

97. Deploying Confluent Kafka to local Kubernetes using cp-helm-charts
https://github.com/confluentinc/cp-helm-charts

git clone https://github.com/confluentinc/cp-helm-charts.git confluentinc\cp-helm-charts

### Install Kafka
helm repo add confluentinc https://confluentinc.github.io/cp-helm-charts/   
helm repo update 

### IMPORTANT NOTES: Update poddisruptionbudget.yaml file in helm folder and use v1 instead of v1beta1...
helm install kafka confluentinc/cp-helm-charts --version 0.6.0

kubectl get po
NAME                                                        READY     STATUS    RESTARTS        AGE
  kafka-cp-control-center-6bc59c488f-hb5gz    1/1       Running   7 (6m14s ago)   12m
  kafka-cp-kafka-0                            2/2       Running   0               12m
  kafka-cp-kafka-1                            2/2       Running   0               2m32s
  kafka-cp-kafka-2                            2/2       Running   0               2m30s
  kafka-cp-kafka-connect-56bc67cc6d-xt774     2/2       Running   7 (6m2s ago)    12m
  kafka-cp-kafka-rest-66f866bcb8-sphzr        2/2       Running   4 (3m23s ago)   12m
  kafka-cp-ksql-server-5566858456-4bnx5       2/2       Running   7 (6m24s ago)   12m
  kafka-cp-schema-registry-7b9f6ff677-d6zqw   2/2       Running   7 (6m21s ago)   12m
  kafka-cp-zookeeper-0                        2/2       Running   0               12m
  kafka-cp-zookeeper-1                        2/2       Running   0               12m
  kafka-cp-zookeeper-2                        2/2       Running   0               12m

### Install Kafka Client
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\kafka-client.yml
kubectl get po | grep kafka-client
  kafka-client                                                1/1       Running   0             39s

kubectl exec -it kafka-client -- /bin/bash
#kafka-cp-zookeeper-headless
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic payment-request --delete --if-exists
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic payment-response --delete --if-exists
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic restaurant-status-request --delete --if-exists
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic restaurant-status-response --delete --if-exists
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic customer --delete --if-exists

  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic payment-request --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic payment-request.
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic payment-response --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic payment-response.
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic restaurant-status-request --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic restaurant-status-request.
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic restaurant-status-response --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic restaurant-status-response.
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --topic customer --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic customer.

  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --list
    ...
    customer
    kafka-cp-kafka-connect-config
    kafka-cp-kafka-connect-offset
    kafka-cp-kafka-connect-status
    payment-request
    payment-response
    restaurant-status-request
    restaurant-status-response

  exit

### Uninstall Kafka
helm uninstall kafka
  release "kafka" uninstalled

kubectl delete -f food-ordering-system\k8s-yamls\docker-desktop\kafka-client.yml
  pod "kafka-client" deleted

98. Creating Kubernetes deployment files for Microservices
cd food-ordering-system
mvn clean install

docker images | grep food.ordering
  com.food.ordering.system/customer.service                 1.0-SNAPSHOT                                                                 e39ddd43f935   42 years ago    269MB
  com.food.ordering.system/payment.service                  1.0-SNAPSHOT                                                                 ebdca5bb0b89   42 years ago    273MB
  com.food.ordering.system/order.service                    1.0-SNAPSHOT                                                                 49e96f2b4483   42 years ago    278MB
  com.food.ordering.system/restaurant.service               1.0-SNAPSHOT                                                                 916c7ea65bb4   42 years ago    264MB

### Service Ports (LoadBalancer)
- Order Service = 8081
- Payment Service = 8082
- Restaurant Service = 8083
- Customer = 8084

### application-deployment-local.yml

99. Deploying Microservices into local Kubernetes
### Update pom.xml
  ...
    <!-- k8s -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  ...

mvn clean install
  ...
  [INFO]     [creator]         Using Java version 17.* from BP_JVM_VERSION
  [INFO]     [creator]       BellSoft Liberica JRE 17.0.5: Contributing to layer
  [INFO]     [creator]         Downloading from https://github.com/bell-sw/Liberica/releases/download/17.0.5+8/bellsoft-jre17.0.5+8-linux-amd64.tar.gz
  ...

helm install kafka confluentinc/cp-helm-charts --version 0.6.0
kubectl get po
  NAME                                                        READY     STATUS    RESTARTS   AGE
  kafka-cp-control-center-6bc59c488f-886mn    1/1       Running   0          10s
  kafka-cp-kafka-0                            2/2       Running   0          10s
  kafka-cp-kafka-1                            0/2       Pending   0          2s
  kafka-cp-kafka-connect-56bc67cc6d-hj926     2/2       Running   0          10s
  kafka-cp-kafka-rest-66f866bcb8-2hcdm        2/2       Running   0          10s
  kafka-cp-ksql-server-5566858456-lxfpz       2/2       Running   0          10s
  kafka-cp-schema-registry-7b9f6ff677-ql2xk   2/2       Running   0          10s
  kafka-cp-zookeeper-0                        2/2       Running   0          10s
  kafka-cp-zookeeper-1                        0/2       Pending   0          0s

### Install Food ordering services
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\application-deployment-local.yml
  deployment.apps/order-deployment created
  service/order-service created
  deployment.apps/payment-deployment created
  service/payment-service created
  deployment.apps/restaurant-deployment created
  service/restaurant-service created
  deployment.apps/customer-deployment created
  service/customer-service created

kubectl get po | grep deploy
  customer-deployment-7584b74679-46vhr                        1/1       Running   2 (4m50s ago)   8m20s
  order-deployment-5769c69f97-bhgtg                           1/1       Running   2 (4m59s ago)   8m20s
  payment-deployment-748c988cfc-b979s                         1/1       Running   2 (4m59s ago)   8m20s
  restaurant-deployment-7d6d4986c5-xz2s9                      1/1       Running   2 (4m59s ago)   8m20s

kubectl get svc | grep service
  customer-service                              LoadBalancer   10.100.40.188    localhost     8184:30270/TCP      7m13s
  order-service                                 LoadBalancer   10.96.152.217    localhost     8181:30231/TCP      7m13s
  payment-service                               LoadBalancer   10.101.93.122    localhost     8182:31671/TCP      7m13s
  restaurant-service                            LoadBalancer   10.99.2.181      localhost     8183:32135/TCP      7m13s

### Postman
- New Customer #1
- New Customer #2
- Post an Order - APPROVED
- Tracking Order
- Post an Order - CANCELLED
- Tracking Order

kubectl logs customer-deployment-5fc75bddbf-9vmxq
kubectl logs order-deployment-5fdc5f465f-55b77
kubectl logs payment-deployment-5bb64d8cf-8mnjm
kubectl logs restaurant-deployment-76579fffc-wd5lg 

100. Deploying Postgres to local Kubernetes using Postgres docker image
kubectl delete -f food-ordering-system\k8s-yamls\docker-desktop\application-deployment-local.yml
helm uninstall kafka 

helm install kafka confluentinc/cp-helm-charts --version 0.6.0
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\postgres-deployment.yml
  service/postgres-service created

kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\application-deployment-local-postgres.yml
  deployment.apps/order-deployment created
  service/order-service created
  deployment.apps/payment-deployment created
  service/payment-service created
  deployment.apps/restaurant-deployment created
  service/restaurant-service created
  deployment.apps/customer-deployment created
  service/customer-service created

kubectl get po
  NAME                                                        READY     STATUS    RESTARTS      AGE
  customer-deployment-7584b74679-w2vrf                        1/1       Running   0             40s
  kafka-cp-control-center-6bc59c488f-xzjt8    1/1       Running   1 (94s ago)   105s
  kafka-cp-kafka-0                            2/2       Running   1 (46s ago)   105s
  kafka-cp-kafka-1                            2/2       Running   1 (45s ago)   95s
  kafka-cp-kafka-2                            2/2       Running   1             87s
  kafka-cp-kafka-connect-56bc67cc6d-lhnwh     2/2       Running   2 (81s ago)   105s
  kafka-cp-kafka-rest-66f866bcb8-gnv2g        2/2       Running   3 (31s ago)   105s
  kafka-cp-ksql-server-5566858456-2xq6r       2/2       Running   3 (69s ago)   105s
  kafka-cp-schema-registry-7b9f6ff677-2sm2l   2/2       Running   2 (49s ago)   105s
  kafka-cp-zookeeper-0                        2/2       Running   0             105s
  kafka-cp-zookeeper-1                        2/2       Running   0             94s
  kafka-cp-zookeeper-2                        2/2       Running   0             83s
  order-deployment-5769c69f97-gdx2p                           1/1       Running   0             40s
  payment-deployment-748c988cfc-n7cxm                         1/1       Running   0             40s
  postgres-deployment-86d5c5dd7c-f9z22                        1/1       Running   0             41s
  restaurant-deployment-7d6d4986c5-dhfbr                      1/1       Running   0             40s

### Check Kafka topics
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\kafka-client.yml
kubectl exec -it kafka-client -- /bin/bash
  kafka-topics --zookeeper kafka-cp-zookeeper-headless:2181 --list
    ...
    customer
    kafka-cp-kafka-connect-config
    kafka-cp-kafka-connect-offset
    kafka-cp-kafka-connect-status
    payment-request
    payment-response
    restaurant-status-request
    restaurant-status-response

  exit

### Postman
- New Customer #1
- New Customer #2
- Post an Order - APPROVED
- Tracking Order
- Post an Order - CANCELLED
- Tracking Order

kubectl logs order-deployment-5769c69f97-gdx2p

### Deploy pgAdmin in k8s
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\pgadmin-deployment.yml

http://localhost

// Login => Servers => Register => 
   General (Name = Food Ordering) => 
   Connection (Host name = postgres-service, username = postgres) =>
   Save
