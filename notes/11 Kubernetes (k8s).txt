96. Introduction to Kubernetes and running a local Kubernetes using Docker Desktop
kubectl get node
  NAME             STATUS    ROLES           AGE       VERSION
  docker-desktop   Ready     control-plane   11m       v1.25.0

kubectl get ns
  NAME              STATUS    AGE
  default           Active    21m
  kube-node-lease   Active    21m
  kube-public       Active    21m
  kube-system       Active    21m

kubectl get po -n kube-system
  NAME                                     READY     STATUS    RESTARTS       AGE
  coredns-95db45d46-46j2v                  1/1       Running   0              22m
  coredns-95db45d46-g9ph9                  1/1       Running   0              22m (v)
  etcd-docker-desktop                      1/1       Running   0              22m (v)
  kube-apiserver-docker-desktop            1/1       Running   0              22m (v)
  kube-controller-manager-docker-desktop   1/1       Running   0              22m
  kube-proxy-2k8pw                         1/1       Running   0              22m
  kube-scheduler-docker-desktop            1/1       Running   0              22m (v)
  storage-provisioner                      1/1       Running   0              21m
  vpnkit-controller                        1/1       Running   1 (4m1s ago)   21m (Docker Desktop)

https://www.docker.com/blog/how-kubernetes-works-under-the-hood-with-docker-desktop/

97. Deploying Confluent Kafka to local Kubernetes using cp-helm-charts
https://github.com/confluentinc/cp-helm-charts

git clone https://github.com/confluentinc/cp-helm-charts.git confluentinc\cp-helm-charts

### Install Kafka
helm repo add confluentinc https://confluentinc.github.io/cp-helm-charts/   
helm repo update 

### IMPORTANT NOTES: Update poddisruptionbudget.yaml file in helm folder and use v1 instead of v1beta1...
helm install local-confluent-kafka confluentinc/cp-helm-charts --version 0.6.0

kubectl get po
NAME                                                        READY     STATUS    RESTARTS        AGE
  local-confluent-kafka-cp-control-center-6bc59c488f-hb5gz    1/1       Running   7 (6m14s ago)   12m
  local-confluent-kafka-cp-kafka-0                            2/2       Running   0               12m
  local-confluent-kafka-cp-kafka-1                            2/2       Running   0               2m32s
  local-confluent-kafka-cp-kafka-2                            2/2       Running   0               2m30s
  local-confluent-kafka-cp-kafka-connect-56bc67cc6d-xt774     2/2       Running   7 (6m2s ago)    12m
  local-confluent-kafka-cp-kafka-rest-66f866bcb8-sphzr        2/2       Running   4 (3m23s ago)   12m
  local-confluent-kafka-cp-ksql-server-5566858456-4bnx5       2/2       Running   7 (6m24s ago)   12m
  local-confluent-kafka-cp-schema-registry-7b9f6ff677-d6zqw   2/2       Running   7 (6m21s ago)   12m
  local-confluent-kafka-cp-zookeeper-0                        2/2       Running   0               12m
  local-confluent-kafka-cp-zookeeper-1                        2/2       Running   0               12m
  local-confluent-kafka-cp-zookeeper-2                        2/2       Running   0               12m

### Install Kafka Client
kubectl apply -f food-ordering-system\k8s-yamls\docker-desktop\kafka-client.yml
kubectl get po | grep kafka-client
  kafka-client                                                1/1       Running   0             39s

kubectl exec -it kafka-client -- /bin/bash
#local-confluent-kafka-cp-zookeeper-headless
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic payment-request --delete --if-exists
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic payment-response --delete --if-exists
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic restaurant-approval-request --delete --if-exists
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic restaurant-approval-response --delete --if-exists
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic customer --delete --if-exists

  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic payment-request --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic payment-request.
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic payment-response --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic payment-response.
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic restaurant-approval-request --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic restaurant-approval-request.
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic restaurant-approval-response --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic restaurant-approval-response.
  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --topic customer --create --partitions 3 --replication-factor 3 --if-not-exists
    Created topic customer.

  kafka-topics --zookeeper local-confluent-kafka-cp-zookeeper-headless:2181 --list
    ...
    customer
    local-confluent-kafka-cp-kafka-connect-config
    local-confluent-kafka-cp-kafka-connect-offset
    local-confluent-kafka-cp-kafka-connect-status
    payment-request
    payment-response
    restaurant-approval-request
    restaurant-approval-response

  exit

### Uninstall Kafka
helm uninstall local-confluent-kafka
  release "local-confluent-kafka" uninstalled

kubectl delete -f food-ordering-system\k8s-yamls\docker-desktop\kafka-client.yml
  pod "kafka-client" deleted

98. Creating Kubernetes deployment files for Microservices
cd food-ordering-system
mvn clean install

docker images | grep food.ordering
  com.food.ordering.system/customer.service                 1.0-SNAPSHOT                                                                 e39ddd43f935   42 years ago    269MB
  com.food.ordering.system/payment.service                  1.0-SNAPSHOT                                                                 ebdca5bb0b89   42 years ago    273MB
  com.food.ordering.system/order.service                    1.0-SNAPSHOT                                                                 49e96f2b4483   42 years ago    278MB
  com.food.ordering.system/restaurant.service               1.0-SNAPSHOT                                                                 916c7ea65bb4   42 years ago    264MB

### Service Ports (LoadBalancer)
- Order Service = 8081
- Payment Service = 8082
- Restaurant Service = 8083
- Customer = 8084

### application-deployment-local.yml
